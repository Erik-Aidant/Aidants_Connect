# Generated by Django 3.1.1 on 2021-01-11 16:43

import aidants_connect_web.models
from django.conf import settings
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Aidant",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("profession", models.TextField()),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "aidant",
            },
            managers=[
                ("objects", aidants_connect_web.models.AidantManager()),
            ],
        ),
        migrations.CreateModel(
            name="Autorisation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "demarche",
                    models.CharField(
                        choices=[
                            ("papiers", "Papiers - Citoyenneté"),
                            ("famille", "Famille"),
                            ("social", "Social - Santé"),
                            ("travail", "Travail"),
                            ("logement", "Logement"),
                            ("transports", "Transports"),
                            ("argent", "Argent"),
                            ("justice", "Justice"),
                            ("etranger", "Étranger"),
                            ("loisirs", "Loisirs"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "revocation_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de révocation"
                    ),
                ),
                ("last_renewal_token", models.TextField(default="No token provided")),
            ],
        ),
        migrations.CreateModel(
            name="Organisation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.TextField(default="No name provided", verbose_name="Nom"),
                ),
                (
                    "siret",
                    models.PositiveIntegerField(default=1, verbose_name="N° SIRET"),
                ),
                (
                    "address",
                    models.TextField(
                        default="No address provided", verbose_name="Adresse"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Usager",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("given_name", models.CharField(max_length=255, verbose_name="Prénom")),
                ("family_name", models.CharField(max_length=255, verbose_name="Nom")),
                ("preferred_username", models.CharField(blank=True, max_length=255)),
                (
                    "gender",
                    models.CharField(
                        choices=[("female", "Femme"), ("male", "Homme")],
                        default="female",
                        max_length=6,
                        verbose_name="Genre",
                    ),
                ),
                ("birthdate", models.DateField(verbose_name="Date de naissance")),
                (
                    "birthplace",
                    models.CharField(
                        blank=True,
                        max_length=5,
                        null=True,
                        verbose_name="Lieu de naissance",
                    ),
                ),
                (
                    "birthcountry",
                    models.CharField(
                        default="99100", max_length=5, verbose_name="Pays de naissance"
                    ),
                ),
                ("sub", models.TextField(unique=True)),
                (
                    "email",
                    models.EmailField(
                        default="noemailprovided@aidantconnect.beta.gouv.fr",
                        max_length=254,
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Date de création",
                    ),
                ),
            ],
            options={
                "ordering": ["family_name", "given_name"],
            },
        ),
        migrations.CreateModel(
            name="Mandat",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Date de création",
                    ),
                ),
                (
                    "expiration_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Date d'expiration",
                    ),
                ),
                (
                    "duree_keyword",
                    models.CharField(
                        choices=[
                            ("SHORT", "pour une durée de 1 jour"),
                            ("LONG", "pour une durée de 1 an"),
                            (
                                "EUS_03_20",
                                "jusqu’à la fin de l’état d’urgence sanitaire ",
                            ),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="Durée",
                    ),
                ),
                (
                    "is_remote",
                    models.BooleanField(
                        default=False, verbose_name="Signé à distance ?"
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        default=aidants_connect_web.models.get_staff_organisation_name_id,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mandats",
                        to="aidants_connect_web.organisation",
                    ),
                ),
                (
                    "usager",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="mandats",
                        to="aidants_connect_web.usager",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("connect_aidant", "Connexion d'un aidant"),
                            (
                                "activity_check_aidant",
                                "Reprise de connexion d'un aidant",
                            ),
                            ("franceconnect_usager", "FranceConnexion d'un usager"),
                            (
                                "update_email_usager",
                                "L'email de l'usager a été modifié",
                            ),
                            ("create_attestation", "Création d'une attestation"),
                            ("create_autorisation", "Création d'une autorisation"),
                            ("use_autorisation", "Utilisation d'une autorisation"),
                            ("cancel_autorisation", "Révocation d'une autorisation"),
                        ],
                        max_length=30,
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("demarche", models.CharField(blank=True, max_length=100, null=True)),
                ("duree", models.IntegerField(blank=True, null=True)),
                ("access_token", models.TextField(blank=True, null=True)),
                ("autorisation", models.IntegerField(blank=True, null=True)),
                (
                    "attestation_hash",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("additional_information", models.TextField(blank=True, null=True)),
                ("is_remote_mandat", models.BooleanField(default=False)),
                (
                    "aidant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="journal_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "usager",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="journal_entries",
                        to="aidants_connect_web.usager",
                    ),
                ),
            ],
            options={
                "verbose_name": "entrée de journal",
                "verbose_name_plural": "entrées de journal",
            },
        ),
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("state", models.TextField()),
                ("nonce", models.TextField(default="No Nonce Provided")),
                (
                    "connection_type",
                    models.CharField(
                        choices=[("FS", "FC as FS"), ("FI", "FC as FI")],
                        default="FI",
                        max_length=2,
                    ),
                ),
                (
                    "demarches",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(default="No démarche"),
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "duree_keyword",
                    models.CharField(
                        choices=[
                            ("SHORT", "pour une durée de 1 jour"),
                            ("LONG", "pour une durée de 1 an"),
                            (
                                "EUS_03_20",
                                "jusqu’à la fin de l’état d’urgence sanitaire ",
                            ),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                ("mandat_is_remote", models.BooleanField(default=False)),
                (
                    "expires_on",
                    models.DateTimeField(
                        default=aidants_connect_web.models.default_connection_expiration_date
                    ),
                ),
                ("access_token", models.TextField(default="No token provided")),
                ("code", models.TextField()),
                ("demarche", models.TextField(default="No demarche provided")),
                ("complete", models.BooleanField(default=False)),
                (
                    "aidant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "autorisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections",
                        to="aidants_connect_web.autorisation",
                    ),
                ),
                (
                    "usager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections",
                        to="aidants_connect_web.usager",
                    ),
                ),
            ],
            options={
                "verbose_name": "connexion",
            },
        ),
        migrations.AddField(
            model_name="autorisation",
            name="mandat",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="autorisations",
                to="aidants_connect_web.mandat",
            ),
        ),
        migrations.AddField(
            model_name="aidant",
            name="organisation",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="aidants",
                to="aidants_connect_web.organisation",
            ),
        ),
        migrations.AddField(
            model_name="aidant",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.Permission",
                verbose_name="user permissions",
            ),
        ),
    ]
